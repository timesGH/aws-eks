name: Deploy Node.js App to EKS

on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: 'Name of the EKS cluster'
        required: true
        default: 'my_eks_cluster'
      awsRegion:
        description: 'AWS Region for the cluster'
        required: true
        default: 'us-east-1'
      action:
        description: 'Action to perform (deploy/remove)'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - remove
      appName:
        description: 'Name of the application to deploy'
        required: true
      repoName:
        description: 'Name of the repository containing the application'
        required: true
      containerPort:
        description: 'Container port for the application'
        required: true
        default: '3000'

jobs:
  terraform:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'deploy' }}
    defaults:
      run:
        working-directory: Terraform
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Terraform Init
      run: terraform init -upgrade  # Added -upgrade flag
    
    - name: Terraform Plan
      run: |
        terraform plan \
          -var="region=${{ github.event.inputs.awsRegion }}" \
          -var="cluster_name=${{ github.event.inputs.clusterName }}"

    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var="region=${{ github.event.inputs.awsRegion }}" \
          -var="cluster_name=${{ github.event.inputs.clusterName }}"
    
    # ...rest of job...

  terraform_destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'remove' }}
    defaults:
      run:
        working-directory: Terraform
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Terraform Init
      run: terraform init -upgrade  # Added -upgrade flag
    
    - name: Terraform Destroy
      run: |
        terraform destroy -auto-approve \
          -var="region=${{ github.event.inputs.awsRegion }}" \
          -var="cluster_name=${{ github.event.inputs.clusterName }}"
